// <auto-generated />
using System;
using AddressParser.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AddressParser.Infrastructure.Migrations
{
    [DbContext(typeof(AddressDbContext))]
    [Migration("20250615084419_AddParseStatisticsTable")]
    partial class AddParseStatisticsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AddressParser.Domain.Entities.ParsedAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OfficeOrRoom")
                        .HasColumnType("text");

                    b.Property<string>("RawInput")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ParseStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("AvgParseDurationMs")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("LastFailure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastSuccess")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalFailed")
                        .HasColumnType("integer");

                    b.Property<int>("TotalParsed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ParseStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
